name: E2E Test Suite (Simple)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Test Environment'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - prerelease
      test_scope:
        description: 'Test Scope'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - smoke
          - regression
          - specific
      specific_spec:
        description: 'Specific Test File (when scope is "specific")'
        required: false
        default: 'tests/basic.spec.ts'
        type: choice
        options:
          - tests/basic.spec.ts
          - tests/smoke/smoke-home.spec.ts
          - tests/smoke/smoke-auth.spec.ts
          - tests/smoke/smoke-cart.spec.ts
          - tests/regression/auth/register-login-logout.spec.ts
          - tests/regression/products/add-to-cart-and-checkout.spec.ts
          - tests/regression/contact/submit-contact-form.spec.ts
      workers:
        description: 'Number of Workers'
        required: true
        default: '3'
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: ./automationexercise-e2e-pom
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: automationexercise-e2e-pom/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests based on scope
        run: |
          case "${{ github.event.inputs.test_scope }}" in
            "all")
              cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test --workers=${{ github.event.inputs.workers }}
              ;;
            "smoke")
              cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test tests/smoke --workers=${{ github.event.inputs.workers }}
              ;;
            "regression")
              cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test tests/regression --workers=${{ github.event.inputs.workers }}
              ;;
            "specific")
              cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test ${{ github.event.inputs.specific_spec }} --workers=${{ github.event.inputs.workers }}
              ;;
          esac
        continue-on-error: true

      - name: Generate Allure Report
        if: always()
        run: npm run allure:generate

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ github.event.inputs.environment }}-${{ github.run_number }}
          path: automationexercise-e2e-pom/single-file-reports/
          retention-days: 30

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.event.inputs.environment }}-${{ github.run_number }}
          path: |
            automationexercise-e2e-pom/test-results/
            automationexercise-e2e-pom/test-reports/
          retention-days: 30

      - name: Test Summary
        if: always()
        run: |
          echo "## ðŸ§ª E2E Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Scope:** ${{ github.event.inputs.test_scope }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Workers:** ${{ github.event.inputs.workers }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“Š **Reports available in artifacts section**" >> $GITHUB_STEP_SUMMARY
