name: E2E Tests (Basic)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select Test Environment'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - prerelease
      test_scope:
        description: 'Select Test Scope'
        required: true
        default: 'smoke'
        type: choice
        options:
          - smoke
          - regression
          - basic
      workers:
        description: 'Number of Workers'
        required: true
        default: '3'
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    defaults:
      run:
        working-directory: ./automationexercise-e2e-pom
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'automationexercise-e2e-pom/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Clean reports
        run: npm run clean

      - name: Run tests based on scope
        run: |
          case "${{ github.event.inputs.test_scope }}" in
            "smoke")
              cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test tests/smoke --workers=${{ github.event.inputs.workers }}
              ;;
            "regression")
              cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test tests/regression --workers=${{ github.event.inputs.workers }}
              ;;
            "basic")
              cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test tests/basic.spec.ts --workers=${{ github.event.inputs.workers }}
              ;;
          esac
        continue-on-error: true

      - name: Generate Allure Report
        if: always()
        run: |
          if [ -d "test-reports/allure-results" ] && [ "$(ls -A test-reports/allure-results)" ]; then
            echo "Generating Allure report..."
            allure generate test-reports/allure-results --clean -o allure-report
          else
            echo "No allure results found"
          fi

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ github.event.inputs.environment }}-${{ github.run_number }}
          path: automationexercise-e2e-pom/allure-report/
          retention-days: 30

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.event.inputs.environment }}-${{ github.run_number }}
          path: |
            automationexercise-e2e-pom/test-results/
            automationexercise-e2e-pom/test-reports/
          retention-days: 30

      - name: Test Summary
        if: always()
        run: |
          echo "## ðŸ§ª E2E Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Scope:** ${{ github.event.inputs.test_scope }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Workers:** ${{ github.event.inputs.workers }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“Š **Reports available in artifacts section**" >> $GITHUB_STEP_SUMMARY
