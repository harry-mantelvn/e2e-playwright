name: E2E Test Suite

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Test Environment'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - prerelease
      test_scope:
        description: 'Test Scope'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - smoke
          - regression
          - specific
      specific_spec:
        description: 'Specific Test File (when scope is "specific")'
        required: false
        default: 'tests/basic.spec.ts'
        type: choice
        options:
          - tests/basic.spec.ts
          - tests/smoke/smoke-home.spec.ts
          - tests/smoke/smoke-auth.spec.ts
          - tests/smoke/smoke-cart.spec.ts
          - tests/regression/auth/register-login-logout.spec.ts
          - tests/regression/products/add-to-cart-and-checkout.spec.ts
          - tests/regression/contact/submit-contact-form.spec.ts
      workers:
        description: 'Number of Workers'
        required: true
        default: '3'
        type: string
      email_recipients:
        description: 'Email Recipients (comma-separated)'
        required: false
        default: ''
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Setup test environment
        run: |
          echo "Setting up environment: ${{ github.event.inputs.environment }}"
          echo "Test scope: ${{ github.event.inputs.test_scope }}"
          echo "Workers: ${{ github.event.inputs.workers }}"

      - name: Run all tests
        if: ${{ github.event.inputs.test_scope == 'all' }}
        run: |
          cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test --workers=${{ github.event.inputs.workers }}
        continue-on-error: true

      - name: Run smoke tests
        if: ${{ github.event.inputs.test_scope == 'smoke' }}
        run: |
          cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test tests/smoke --workers=${{ github.event.inputs.workers }}
        continue-on-error: true

      - name: Run regression tests
        if: ${{ github.event.inputs.test_scope == 'regression' }}
        run: |
          cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test tests/regression --workers=${{ github.event.inputs.workers }}
        continue-on-error: true

      - name: Run specific test
        if: ${{ github.event.inputs.test_scope == 'specific' }}
        run: |
          cross-env NODE_ENV=${{ github.event.inputs.environment }} npx playwright test ${{ github.event.inputs.specific_spec }} --workers=${{ github.event.inputs.workers }}
        continue-on-error: true

      - name: Generate Allure Report
        if: always()
        run: |
          npm run allure:generate
          
      - name: Create test summary
        if: always()
        run: |
          echo "## Test Execution Summary" > test-summary.md
          echo "" >> test-summary.md
          echo "- **Environment:** ${{ github.event.inputs.environment }}" >> test-summary.md
          echo "- **Test Scope:** ${{ github.event.inputs.test_scope }}" >> test-summary.md
          echo "- **Workers:** ${{ github.event.inputs.workers }}" >> test-summary.md
          echo "- **Execution Time:** $(date)" >> test-summary.md
          echo "" >> test-summary.md
          if [ -d "test-results" ]; then
            echo "- **Total Test Files:** $(find test-results -name "*.json" | wc -l)" >> test-summary.md
          fi
          echo "" >> test-summary.md
          echo "📊 **Detailed report available in artifacts**" >> test-summary.md

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ github.event.inputs.environment }}-${{ github.run_number }}
          path: single-file-reports/
          retention-days: 30

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.event.inputs.environment }}-${{ github.run_number }}
          path: |
            test-results/
            test-reports/
            test-summary.md
          retention-days: 30

      - name: Send Email Report
        if: ${{ always() && github.event.inputs.email_recipients != '' }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "E2E Test Report - ${{ github.event.inputs.environment }} - ${{ github.run_number }}"
          to: ${{ github.event.inputs.email_recipients }}
          from: "GitHub Actions <${{ secrets.EMAIL_USERNAME }}>"
          html_body: |
            <h2>🧪 E2E Test Execution Report</h2>
            
            <h3>📋 Test Configuration</h3>
            <ul>
              <li><strong>Environment:</strong> ${{ github.event.inputs.environment }}</li>
              <li><strong>Test Scope:</strong> ${{ github.event.inputs.test_scope }}</li>
              <li><strong>Workers:</strong> ${{ github.event.inputs.workers }}</li>
              <li><strong>Execution Time:</strong> ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}</li>
            </ul>
            
            <h3>🔗 Quick Links</h3>
            <ul>
              <li><a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">View Full Execution Log</a></li>
              <li><a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts">Download Detailed Report</a></li>
            </ul>
            
            <h3>📊 Results</h3>
            <p>Detailed test results and Allure report are available in the GitHub Actions artifacts.</p>
            
            <p><em>This is an automated email from GitHub Actions.</em></p>
          attachments: single-file-reports/index.html

      - name: Comment PR (if triggered from PR)
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = '## 🧪 E2E Test Results\n\n';
            
            if (fs.existsSync('test-summary.md')) {
              summary += fs.readFileSync('test-summary.md', 'utf8');
            }
            
            summary += `\n\n📁 **Artifacts:**\n`;
            summary += `- [Allure Report](${context.payload.repository.html_url}/actions/runs/${context.runId}#artifacts)\n`;
            summary += `- [Test Results](${context.payload.repository.html_url}/actions/runs/${context.runId}#artifacts)\n`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
